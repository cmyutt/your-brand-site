generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Customer {
  id        String   @id
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  Order     Order[]
}

model Order {
  id           String      @id
  customerId   String?
  status       OrderStatus @default(PENDING)
  totalAmount  Int
  receiverName String
  phone        String
  addressLine1 String
  addressLine2 String?
  postalCode   String
  createdAt    DateTime    @default(now())
  Customer     Customer?   @relation(fields: [customerId], references: [id])
  OrderItem    OrderItem[]
}

model OrderItem {
  id        String   @id
  orderId   String
  productId String
  variantId String?
  unitPrice Int
  qty       Int
  Order     Order    @relation(fields: [orderId], references: [id])
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  Variant   Variant? @relation(fields: [variantId], references: [id])
}

model Product {
  id           String         @id
  name         String
  slug         String         @unique
  description  String?
  price        Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  published    Boolean        @default(true)
  OrderItem    OrderItem[]
  ProductImage ProductImage[]
  Variant      Variant[]
}

model ProductImage {
  id        String  @id
  url       String
  alt       String?
  sort      Int     @default(0)
  productId String
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Variant {
  id        String      @id
  name      String
  stock     Int         @default(0)
  extra     Int         @default(0)
  productId String
  OrderItem OrderItem[]
  Product   Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  PENDING
  PAID
  FULFILLED
  CANCELED
  REFUNDED
}
