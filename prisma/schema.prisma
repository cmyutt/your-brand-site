generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Customer {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  orders    Order[]
}

model Order {
  id           String      @id @default(uuid())
  customerId   String?
  status       OrderStatus @default(PENDING)
  totalAmount  Int
  receiverName String
  phone        String
  addressLine1 String
  addressLine2 String?
  postalCode   String
  createdAt    DateTime    @default(now())

  customer Customer?   @relation(fields: [customerId], references: [id])
  items    OrderItem[]

  // 결제 1:1 (주문당 대표 결제)
  payment  Payment?

  @@index([customerId])
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  variantId String?
  unitPrice Int
  qty       Int
  name      String?
  subtotal  Int?

  order   Order    @relation(fields: [orderId], references: [id])
  product Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  variant Variant? @relation(fields: [variantId], references: [id], onDelete: SetNull)

  @@index([orderId])
  @@index([productId])
  @@index([variantId])
}

model Product {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  description String?
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  published   Boolean  @default(true)

  images     ProductImage[]
  variants   Variant[]
  orderItems OrderItem[]
}

model ProductImage {
  id        String  @id @default(uuid())
  url       String
  alt       String?
  sort      Int     @default(0)
  productId String

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@unique([productId, sort]) // 한 상품 내 sort 고유
}

model Variant {
  id        String @id @default(uuid())
  name      String
  stock     Int    @default(0)
  extra     Int    @default(0)
  productId String

  product    Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@index([productId])
}

enum OrderStatus {
  PENDING
  PAID
  FULFILLED
  CANCELED
  REFUNDED
}

// === 결제 ===
model Payment {
  id                 String        @id @default(uuid())
  orderId            String        @unique
  amount             Int           // 실제 청구 금액 (KRW, 정수)
  currency           String        @default("KRW")
  provider           String        // "mock" | "toss" | "iamport" 등
  providerPaymentId  String?       // PG측 결제 ID
  status             PaymentStatus @default(INIT)
  failureCode        String?
  failureMessage     String?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt

  order              Order         @relation(fields: [orderId], references: [id])

  @@index([provider, providerPaymentId])
}

enum PaymentStatus {
  INIT
  AUTHORIZED
  PAID
  CANCELED
  FAILED
  REFUNDED
}
